local a=_G.apikey;local b="https://api.groq.com/openai/v1/chat/completions"local c=""tools={}toolcallback={}groq={}body={["model"]=c,["messages"]={["role"]="system",["content"]=""},["tools"]=tools,["tool_choice"]="auto",["parallel_tool_calls"]=false}local d={}d.__index=d;function d.new(e)local self=setmetatable({},d)local f=game:GetService("HttpService")local g=f:JSONDecode(e)self.StopReason=g.choices[1].finish_reason;if self.StopReason=="tool_calls"then self.ToolsUse=g.choices[1].message.tool_calls else self.AIResponse=g.choices[1].message.content end;self.__tostring=self.AIResponse;return self end;local h={}h.__index=h;function h.new(i,j,k)local self=setmetatable({},h)self[i]={type=j,description=k}return self end;local l={}l.__index=l;function l.new(i,j,m)local self=setmetatable({},l)self[i]={type=j,enum=m}return self end;function groq:SetModel(n)c=n;body.model=n;return 0 end;function groq:SetSystemPrompt(o)if not body["messages"]then body["messages"]={}end;if not body["messages"][1]then body["messages"][1]={}end;body["messages"][1]["role"]="system"body["messages"][1]["content"]=o;return 0 end;function groq:RequestAI(p,q,r,s,t)local f=game:GetService("HttpService")q=q or 256;r=r or 1;s=s or os.time()t=t or""body["max_tokens"]=q;body["temperature"]=r;body["seed"]=s;body["stop"]=t;body["tools"]=tools;table.insert(body.messages,{["role"]="user",["content"]=p})local u=request({Url=b,Method="POST",Body=f:JSONEncode(body),Headers={["Content-Type"]="application/json",["Authorization"]=string.format("Bearer %s",a)}})print(u.Body)local v=d.new(u.Body)if v.StopReason=="stop"then table.insert(body.messages,{["role"]="assistant",["content"]=v.AIResponse})elseif v.StopReason=="tool_calls"then for w,x in ipairs(toolcallback)do if x.name==v.ToolsUse[1]["function"].name then local function y(z)local A={}for B,x in pairs(z)do table.insert(A,x)end;return A end;local C=y(f:JSONDecode(v.ToolsUse[1]["function"].arguments))cans=x.callback(unpack(C))table.insert(body.messages,{["role"]="tool",["content"]=cans,["tool_call_id"]=v.ToolsUse[1].id})end end end;return v end;function groq:CreateTool(i,k,D,E,F)D=D or{}E=E or{}F=F or function()end;table.insert(tools,{["type"]="function",["function"]={["name"]=i,["description"]=k,["parameters"]={["type"]="object",["properties"]=D,["required"]=E}}})table.insert(toolcallback,{["name"]=i,["callback"]=F})end;function groq:ResetChats()local G=body.messages[1].content;body.messages={{["role"]="system",["content"]=G}}end;return groq
